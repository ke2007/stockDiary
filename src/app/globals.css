@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
    /* 화이트 기반 글래스모피즘 배경 */
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 50%, #f1f5f9 100%);
    min-height: 100vh;
  }
  
  /* 화이트 기반 글래스모피즘 스타일 */
  .glass {
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.8);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.1);
  }
  
  .glass-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.9);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.08);
  }
  
  .glass-header {
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.05);
  }
  
  .glass-sidebar {
    background: rgba(255, 255, 255, 0.75);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(25px);
    border-right: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 4px 0 16px 0 rgba(0, 0, 0, 0.05);
  }
  
  .glass-button {
    background: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .glass-button:hover {
    background: rgba(255, 255, 255, 0.8);
    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .glass-input {
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.15);
    color: rgba(0, 0, 0, 0.8);
  }
  
  .glass-input::placeholder {
    color: rgba(0, 0, 0, 0.5);
  }
  
  /* CSS 애니메이션 제거 - 다른 방법 사용 */
}

/* 3x3 카드 분해 조립 효과 */
@layer components {
  .fragmentation-container {
    perspective: 1000px;
    width: 100%;
  }
  
  .card-fragment-wrapper {
    position: relative;
    transform-style: preserve-3d;
    margin-bottom: 1rem;
    width: 100%;
  }
  
  .card-fragment-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 0;
    width: 100%;
    position: relative;
    min-height: 100px;
  }
  
  .card-fragment {
    position: relative;
    overflow: hidden;
    transform-style: preserve-3d;
    transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    backface-visibility: visible;
    width: 100%;
    height: 100%;
  }
  
  /* 각 조각의 기본 상태 */
  .card-fragment.idle {
    transform: rotateX(0deg) rotateY(0deg) translateZ(0) scale(1);
    opacity: 1;
  }
  
  /* 분해 애니메이션 - 각 조각이 다른 방향으로 날아감 */
  .card-fragment.disassemble {
    opacity: 0.7;
  }
  
  .card-fragment.disassemble:nth-child(1) { 
    transform: rotateX(-90deg) rotateY(-45deg) translateZ(100px) translateX(-50px) translateY(-50px) scale(0.8);
    animation-delay: 0ms;
  }
  .card-fragment.disassemble:nth-child(2) { 
    transform: rotateX(-90deg) translateZ(120px) translateY(-80px) scale(0.8);
    animation-delay: 50ms;
  }
  .card-fragment.disassemble:nth-child(3) { 
    transform: rotateX(-90deg) rotateY(45deg) translateZ(100px) translateX(50px) translateY(-50px) scale(0.8);
    animation-delay: 100ms;
  }
  .card-fragment.disassemble:nth-child(4) { 
    transform: rotateY(-90deg) translateZ(120px) translateX(-80px) scale(0.8);
    animation-delay: 150ms;
  }
  .card-fragment.disassemble:nth-child(5) { 
    transform: rotateX(180deg) translateZ(150px) scale(0.7);
    animation-delay: 200ms;
  }
  .card-fragment.disassemble:nth-child(6) { 
    transform: rotateY(90deg) translateZ(120px) translateX(80px) scale(0.8);
    animation-delay: 250ms;
  }
  .card-fragment.disassemble:nth-child(7) { 
    transform: rotateX(90deg) rotateY(-45deg) translateZ(100px) translateX(-50px) translateY(50px) scale(0.8);
    animation-delay: 300ms;
  }
  .card-fragment.disassemble:nth-child(8) { 
    transform: rotateX(90deg) translateZ(120px) translateY(80px) scale(0.8);
    animation-delay: 350ms;
  }
  .card-fragment.disassemble:nth-child(9) { 
    transform: rotateX(90deg) rotateY(45deg) translateZ(100px) translateX(50px) translateY(50px) scale(0.8);
    animation-delay: 400ms;
  }
  
  /* 조립 애니메이션 - 리스트 뷰 */
  .card-fragment.assemble-list {
    transform: rotateX(0deg) rotateY(0deg) translateZ(0) scale(1);
    opacity: 1;
    animation: assembleFromTop 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) backwards;
  }
  
  .card-fragment.assemble-list:nth-child(1) { animation-delay: 0ms; }
  .card-fragment.assemble-list:nth-child(2) { animation-delay: 50ms; }
  .card-fragment.assemble-list:nth-child(3) { animation-delay: 100ms; }
  .card-fragment.assemble-list:nth-child(4) { animation-delay: 150ms; }
  .card-fragment.assemble-list:nth-child(5) { animation-delay: 200ms; }
  .card-fragment.assemble-list:nth-child(6) { animation-delay: 250ms; }
  .card-fragment.assemble-list:nth-child(7) { animation-delay: 300ms; }
  .card-fragment.assemble-list:nth-child(8) { animation-delay: 350ms; }
  .card-fragment.assemble-list:nth-child(9) { animation-delay: 400ms; }
  
  /* 조립 애니메이션 - 카드 뷰 */
  .card-fragment.assemble-card {
    transform: rotateX(0deg) rotateY(0deg) translateZ(0) scale(1);
    opacity: 1;
    animation: assembleFromLeft 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) backwards;
  }
  
  .card-fragment.assemble-card:nth-child(1) { animation-delay: 0ms; }
  .card-fragment.assemble-card:nth-child(2) { animation-delay: 50ms; }
  .card-fragment.assemble-card:nth-child(3) { animation-delay: 100ms; }
  .card-fragment.assemble-card:nth-child(4) { animation-delay: 150ms; }
  .card-fragment.assemble-card:nth-child(5) { animation-delay: 200ms; }
  .card-fragment.assemble-card:nth-child(6) { animation-delay: 250ms; }
  .card-fragment.assemble-card:nth-child(7) { animation-delay: 300ms; }
  .card-fragment.assemble-card:nth-child(8) { animation-delay: 350ms; }
  .card-fragment.assemble-card:nth-child(9) { animation-delay: 400ms; }
  
  /* 조립 애니메이션 - 그리드 뷰 */
  .card-fragment.assemble-grid {
    transform: rotateX(0deg) rotateY(0deg) translateZ(0) scale(1);
    opacity: 1;
    animation: assembleFromGrid 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) backwards;
  }
  
  .card-fragment.assemble-grid:nth-child(1) { animation-delay: 0ms; }
  .card-fragment.assemble-grid:nth-child(2) { animation-delay: 50ms; }
  .card-fragment.assemble-grid:nth-child(3) { animation-delay: 100ms; }
  .card-fragment.assemble-grid:nth-child(4) { animation-delay: 150ms; }
  .card-fragment.assemble-grid:nth-child(5) { animation-delay: 200ms; }
  .card-fragment.assemble-grid:nth-child(6) { animation-delay: 250ms; }
  .card-fragment.assemble-grid:nth-child(7) { animation-delay: 300ms; }
  .card-fragment.assemble-grid:nth-child(8) { animation-delay: 350ms; }
  .card-fragment.assemble-grid:nth-child(9) { animation-delay: 400ms; }
  
  @keyframes assembleFromTop {
    0% {
      transform: rotateX(-90deg) translateY(-100px) translateZ(-50px) scale(0.5);
      opacity: 0;
    }
    50% {
      transform: rotateX(-45deg) translateY(-50px) translateZ(-25px) scale(0.75);
      opacity: 0.7;
    }
    100% {
      transform: rotateX(0deg) translateY(0) translateZ(0) scale(1);
      opacity: 1;
    }
  }
  
  @keyframes assembleFromLeft {
    0% {
      transform: rotateY(-90deg) translateX(-100px) translateZ(-50px) scale(0.5);
      opacity: 0;
    }
    50% {
      transform: rotateY(-45deg) translateX(-50px) translateZ(-25px) scale(0.75);
      opacity: 0.7;
    }
    100% {
      transform: rotateY(0deg) translateX(0) translateZ(0) scale(1);
      opacity: 1;
    }
  }
  
  @keyframes assembleFromGrid {
    0% {
      transform: rotateX(45deg) rotateY(45deg) translateZ(-100px) scale(0.3);
      opacity: 0;
    }
    50% {
      transform: rotateX(22deg) rotateY(22deg) translateZ(-50px) scale(0.65);
      opacity: 0.7;
    }
    100% {
      transform: rotateX(0deg) rotateY(0deg) translateZ(0) scale(1);
      opacity: 1;
    }
  }
}
